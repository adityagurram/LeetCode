/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    
    //Tricky Problem to solve
    //If the node has more than 1 coin, that means it needs to give away x-1 coins. Reading each node data and calculating the abs of their coin requirements will give the minimum count
    int total=0;
    public int DistributeCoins(TreeNode root) {
        
        if(root ==null)
        {
            return 0;
        }
        
        helper(root);
        return total;
    }
    
    private int helper(TreeNode root)
    {
        
        if(root==null) return 0;
        
        int left= helper(root.left);
        
        int right= helper(root.right);
        total+= Math.Abs(left) + Math.Abs (right);
        
        return left + right +  root.val -1;
        
    }
}