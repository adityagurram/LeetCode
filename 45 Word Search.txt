public class Solution {
    public bool Exist(char[][] board, string word) {
     
        
        if(board==null || board.Length==0)
        {
            return false;
        }
        
        
        for(int i=0; i< board.Length; i++)
        {
            for(int j=0; j< board[i].Length; j++)
            {
                if(board[i][j]== word[0])
                {
                    //call the DFS functiobn
                     if(DFS(i, j, board, word, 0))
                         return true;
                }
            }
        }
        
        return false;
    }
    
    
    private bool DFS (int i , int j,char[][] board, string word , int index)
    {
         if(index== word.Length)
        {
            return true;
        }
        
        if( i<0 || j<0 || i>= board.Length || j>= board[i].Length || board[i][j]!=word[index])
        {
            return  false; 
        }
        
        char temp= board[i][j];
        board[i][j]='$';
        
      
        
     bool flag=   DFS(i+1, j, board, word, index +1 ) ||
        DFS(i-1, j, board, word, index +1 ) ||
        DFS(i, j-1, board, word, index +1 ) ||
        DFS(i, j+1, board, word, index +1 ) ;
        
        board[i][j]= temp;
        
        return flag;
    }
}