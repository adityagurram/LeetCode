/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode AddTwoNumbers(ListNode l1, ListNode l2) {
        
        
       //First we need to create a dummy node for saving the l3 position. Here carry is very imp
        
        ListNode dummyHead= new ListNode(0);
        ListNode currentHead= dummyHead;
        int carry =0;
        while (l1!=null || l2!= null || carry !=0)
        {
            int l1_val = (l1!=null) ? l1.val :0;
            int l2_val = (l2!=null) ? l2.val :0;
            
            int currentSum= l1_val + l2_val + carry;
            carry= currentSum /10;
            int val = currentSum%10;
            
            ListNode newNode= new ListNode(val);
            currentHead.next= newNode;
            
            
            //update the pointers for iteration
            if(l1!=null)
            {
                l1= l1.next;
            }
            if(l2!=null)
            {
                l2= l2.next;
            }
            
            currentHead= currentHead.next;
            
        }
        
        return dummyHead.next;
        
    }
}