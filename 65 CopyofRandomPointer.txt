/*
// Definition for a Node.
public class Node {
    public int val;
    public Node next;
    public Node random;
    
    public Node(int _val) {
        val = _val;
        next = null;
        random = null;
    }
}
*/

public class Solution {
    public Node CopyRandomList(Node head) {
        
        Dictionary<Node, Node> dict= new Dictionary<Node, Node>();
        
    if(head==null)
        return null;
        
        Node curr= head;
        
        while(curr!=null)
        {
            Node newNode= new Node (curr.val);
            dict.Add (curr, newNode);
            curr= curr.next;
        }
        
        curr= head;
        
        while (curr!=null)
        {
            Node newNode= dict[curr] ;
            newNode.next= curr.next==null? null:dict[curr.next] ;
            newNode.random= curr.random==null ? null: dict[curr.random];
            curr= curr.next;
        }
        return dict[head];
    }
}