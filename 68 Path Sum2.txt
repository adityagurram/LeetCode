/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
   
    public IList<IList<int>> PathSum(TreeNode root, int targetSum) {
        IList<IList<int>> result= new List<IList<int>>();  
        if(root == null)
        {
            return result;
        }
        
        List<int> temp= new List<int> ();
        helper(root, targetSum, temp, ref result);
        return result;
    }
    
   private  void helper (TreeNode root, int targetSum, List<int> slate, ref IList<IList<int>> result)
    {
        
        if(root. left== null && root.right== null)
        {
            //leaf node
            
            if(root.val== targetSum)
            {
                slate.Add (root.val);
                result. Add ( new List<int> (slate));
                slate.RemoveAt(slate.Count () -1);
                return ;
            }
        }
        
       
        if(root.left!=null)
        {
            slate. Add (root.val);
            helper (root.left , targetSum- root.val, slate, ref result);
            slate.RemoveAt(slate.Count () -1);
        }
        
        if(root.right!=null)
        {
            slate. Add (root.val);
            helper (root.right , targetSum- root.val, slate, ref result);
            slate.RemoveAt(slate.Count () -1);
        }
        
    }
}