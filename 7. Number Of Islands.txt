public class Solution {
    public int NumIslands(char[][] grid) {
        
        int numberOfIslands=0;
        
        if(grid==null || grid[0].Length==0)
        {
            return numberOfIslands;
        }
        
        
        for(int i=0; i< grid.Length; i++)
        {
            for(int j=0; j< grid[i].Length; j++)
            {
                if(grid[i][j]=='1')
                {
                  numberOfIslands+=  DFS(ref grid, i, j);
                }
            }
        }
        return numberOfIslands;
    }
    
    private int DFS(ref char [][] grid, int i , int j)
    {
        if(i<0 || j<0 || i>= grid.Length || j>=grid[i].Length|| grid[i][j]=='0')
        {
            return 0;
        }
        
        grid[i][j]='0';
        
        DFS(ref grid, i-1, j);
        DFS(ref grid, i, j-1);
        DFS(ref grid,i+1, j);
        DFS(ref grid,i, j+1);
        
        return 1;
    }
}