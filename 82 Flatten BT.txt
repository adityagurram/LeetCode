/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public void Flatten(TreeNode root) {
        
        if(root==null) return ;
        
        Stack<TreeNode> stack= new Stack<TreeNode>();        
        stack.Push(root);
        
        while(stack.Count () > 0)
        {
            TreeNode curr= stack.Pop();
            
            if(curr.right !=null)
            {
                stack.Push (curr.right);
            }
            
            if(curr.left !=null)
            {
                stack.Push (curr.left);
            }
            
            if(stack.Count () > 0)
            {
                curr.right = stack.Peek();
            }
            curr.left=null;
        }
        
        
    }
}