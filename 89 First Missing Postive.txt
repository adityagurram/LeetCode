public class Solution {
    public int FirstMissingPositive(int[] nums) {
        
        //Brute force approach is to add everyelement into the set and run a loop from 1 to len +1 and verify if any number is missing in that range and return it
        
        if(nums==null || nums.Length == 0) return 1;
        
        int n= nums.Length;
        int containsOne=0;
        //Step1
        
        for(int i=0; i< n; i++)
        {
            if(nums[i]==1)
            {
                containsOne=1;
            }
            
            else if (nums [i] <=0 || nums [i] >n)
            {
                nums[i]=1;
            }
        }
        
        if(containsOne==0) return 1;//bcz range starts from 1
        
        
        //step2
        for(int i=0; i< n; i++)
        {
            int index = Math.Abs(nums[i])-1;
            
            if(nums[index]>0)
            {
                nums[index]= -1 * nums[index];
            }
        }
        
        //step3
        
        for(int i=0; i< n; i++)
        {
            if(nums[i] >0)
            {
                return i+1;
            }
        }
        
        
        return n+1;
    }
}